


&НаКлиенте
Процедура ПриОткрытии(Отказ)  
	Лог = "Ожидание задания...";
	ВыполняетсяТест = Ложь;
	ТестЗавершен = Ложь;
	ИдентификаторВыполняемогоТеста = "";
	ПодключитьОбработчикОжидания("ЗапроситьЗадачуИзОчереди",3, Ложь);
КонецПроцедуры

&НаКлиенте
Асинх Процедура ЗапроситьЗадачуИзОчереди()

	
	Соединение = Новый HTTPСоединение("localhost",8082);
	HTTPЗапрос = Новый HTTPЗапрос("edu_manager/hs/api/queue/");
	
	Если НЕ ВыполняетсяТест Тогда
		
		Ответ = Соединение.ВызватьHTTPМетод("GET", HTTPЗапрос);
	
		Если Ответ.КодСостояния = 200 Тогда
		
			Чтение = Новый ЧтениеJSON;
			Чтение.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
			Данные = ПрочитатьJSON(Чтение);
			
			Если Данные.status = "empty" Тогда
			
				Лог = Лог + ".";	
				
			Иначе
				
				Лог = Лог + Символы.ПС + "Запуск выполнения теста.";
				
				ВыполняетсяТест = Истина;
				ТестЗавершен = Ложь; 
				ИдентификаторВыполняемогоТеста = Данные.id;
				ОчиститьПапкуСТестами();
				ПолучитьФайлСКонфигурацией(Данные.id);
				РазвернутьТестовуюИБ(Данные.id);
				СохранитьСценарии(Данные.tests);
				ВыполнитьСценарииТестирования();
				
				
			КонецЕсли;
			
		КонецЕсли;
	
		
	ИначеЕсли ТестЗавершен Тогда		
		
		
		
		ТелоОтвета = Новый Структура;			
		ТелоОтвета.Вставить("id", ИдентификаторВыполняемогоТеста);
		
		//todo: заменить путь на константу
		ЧтениеТекста = Новый ЧтениеТекста("C:\Users\Daniel\Documents\ВременнаяПапкаСТестом\Результаты\testresult.json",КодировкаТекста.UTF8);		
		ТелоОтвета.Вставить("result", ЧтениеТекста.Прочитать());
			
		ЗаписьТело = Новый ЗаписьJSON;
		ЗаписьТело.УстановитьСтроку();
		ЗаписатьJSON(ЗаписьТело, ТелоОтвета);
				
		HTTPЗапрос.УстановитьТелоИзСтроки(ЗаписьТело.Закрыть());
			
		Ответ = Соединение.ВызватьHTTPМетод("POST", HTTPЗапрос);
	    Лог = Лог + Символы.ПС + "Задание " + ИдентификаторВыполняемогоТеста + " выполнено." + Символы.ПС + "Ожидание задания..."; 
		ИдентификаторВыполняемогоТеста = "";
		ВыполняетсяТест = Ложь;
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСценарииТестирования()

	
	Ванесса = ПолучитьФорму("Обработка.VanessaAutomationsingle.Форма.УправляемаяФорма");
	
    СтруктураНастроек = Новый Структура;
    СтруктураНастроек.Вставить("ИспользоватьКомпонентуVanessaExt", Ложь);
	СтруктураНастроек.Вставить("ДелатьОтчетВФорматеCucumberJson", Истина);
	СтруктураНастроек.Вставить("КаталогФич", "C:\Users\Daniel\Documents\ВременнаяПапкаСТестом\");
	СтруктураНастроек.Вставить("КаталогВыгрузкиCucumberJson", "C:\Users\Daniel\Documents\ВременнаяПапкаСТестом\Результаты");
	СтруктураНастроек.Вставить("КлиентТестирования", Новый Структура("ДанныеКлиентовТестирования", ПолучитьПараметрыКлиентаТестирования()));
	СтруктураНастроек.Вставить("ЗагружатьНастройкиКлиентовТестирования", Истина);
	СтруктураНастроек.Вставить("ЗакрытьTestClientПослеЗапускаСценариев", Истина); 
	
	СтруктураНастроек.Вставить("КаталогВыгрузкиОтчетаДляСистемыТестирования", "C:\Users\Daniel\Documents\ВременнаяПапкаСТестом\Результаты");
	СтруктураНастроек.Вставить("ДелатьОтчетДляСистемыТестирования", Истина);
	
	Ванесса.УстановитьНастройкиПриЗапускеБезОткрытияФормы(СтруктураНастроек);
    Ванесса.ВыполнитьСценарииБезОткрытияФормы();
	
	

КонецПроцедуры // ВыполнитьТестовыйТест()


&НаКлиенте
Функция ПолучитьПараметрыКлиентаТестирования()

//"КлиентыТестирования":[
//     {
//       "Имя": "Этот клиент",
//       "ПутьКИнфобазе": "/F.\\ServiceBases\\v83ServiceBase8323",
//       "ДопПараметры": "",
//       "ТипКлиента": "Тонкий",
//       "ИмяКомпьютера": "localhost",
//       "ПортЗапускаТестКлиента": "1538",
//	   "АктивизироватьСтроку": "Истина"
//     }
//   ]

	Результат = Новый Массив;
	Клиент = Новый Структура();
	Клиент.Вставить("Имя", "ЗагруженнаяБаза");
	Клиент.Вставить("ПутьКИнфобазе",  "File=""C:\Users\Daniel\Documents\ВременнаяПапкаСТестом\build\ib"";");
	Клиент.Вставить("ДопПараметры", "");
	Клиент.Вставить("ТипКлиента", "Тонкий");
	Клиент.Вставить("ИмяКомпьютера", "localhost");
	Клиент.Вставить("ПортЗапускаТестКлиента", 48005);

	Результат.Добавить(Клиент);

	Возврат Результат

КонецФункции // ПолучитьПараметрыКлиентаТестирования()


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ОкончаниеВыполненияСценариевVanessaAutomation" Тогда
	
		ТестЗавершен = Истина;		
	
	КонецЕсли;
КонецПроцедуры

Процедура ОчиститьПапкуСТестами()

	Попытка
		    УдалитьФайлы("C:\Users\Daniel\Documents\ВременнаяПапкаСТестом\", "*.feature"); 
	Исключение
		#Если Клиент Тогда
			Сообщить(ОписаниеОшибки());
		#КонецЕсли
    КонецПопытки;

КонецПроцедуры


&НаКлиенте
Процедура СохранитьСценарии(Сценарии)

	Для каждого Сценарий Из Сценарии Цикл
	
		ЗаписьТекста = Новый ЗаписьТекста("C:\Users\Daniel\Documents\ВременнаяПапкаСТестом\" + Сценарий.name + ".feature");
		ЗаписьТекста.Записать(Сценарий.scenario);
		ЗаписьТекста.Закрыть();
	
	КонецЦикла;	

КонецПроцедуры // СохранитьСценарии()


&НаКлиенте
Процедура ПолучитьФайлСКонфигурацией(Идентификатор)
	
	Соединение = Новый HTTPСоединение("localhost",8082);
	HTTPЗапрос = Новый HTTPЗапрос("edu_manager/hs/api/solution");
	
	ТелоЗапроса = Новый Структура;			
	ТелоЗапроса.Вставить("id", Идентификатор);
					
	ЗаписьТело = Новый ЗаписьJSON;
	ЗаписьТело.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьТело, ТелоЗапроса);
				
	HTTPЗапрос.УстановитьТелоИзСтроки(ЗаписьТело.Закрыть());
			
	Ответ = Соединение.ВызватьHTTPМетод("GET", HTTPЗапрос);
	
	СохранитьФайлИзТела(Идентификатор, Ответ);
	

КонецПроцедуры // ПолучитьФайлСКонфигурацией()

&НаКлиенте
Функция СохранитьФайлИзТела(Идентификатор, Ответ)

	Данные = Ответ.ПолучитьТелоКакДвоичныеДанные(); 	
	Данные.Записать("C:\Users\Daniel\Documents\ВременнаяПапкаСТестом\КонфигурацииДляПроверки\" + Идентификатор + ".cf");
	
КонецФункции


&НаКлиенте
Асинх Процедура РазвернутьТестовуюИБ(Идентификатор)
	
	КодВозврата = Ждать ЗапуститьПриложениеАсинх("C:\Users\Daniel\Documents\ВременнаяПапкаСТестом\run.bat ""C:\Users\Daniel\Documents\ВременнаяПапкаСТестом\КонфигурацииДляПроверки\" + Идентификатор + ".cf""", "C:\Users\Daniel\Documents\ВременнаяПапкаСТестом", Истина);	

КонецПроцедуры // РазвернутьТестовуюИБ()
