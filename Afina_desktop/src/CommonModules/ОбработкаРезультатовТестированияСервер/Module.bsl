Процедура РасчтатьРезультатВыполнения(Идентификатор) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОчередьЗадач.Пользователь КАК Пользователь,
		|	ОчередьЗадач.Задача КАК Задача,
		|	ОчередьЗадач.РезультатПроверки КАК РезультатПроверки
		|ИЗ
		|	РегистрСведений.ОчередьЗадач КАК ОчередьЗадач
		|ГДЕ
		|	ОчередьЗадач.Идентификатор = &Идентификатор";
	
	Запрос.УстановитьПараметр("Идентификатор", Новый УникальныйИдентификатор(Идентификатор));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		РезультатПроверкиСтруктура = ОбменДаннымиСервер.ПолучитьСтруктуруИзJSON(Выборка.РезультатПроверки);		
		РезультатПроверкиСтруктура.Вставить("Пользователь", Выборка.Пользователь);
		РезультатПроверкиСтруктура.Вставить("Задача", Выборка.Задача);
		СоздатьЗаписьСРезультатомПроверки(Идентификатор, РезультатПроверкиСтруктура);
		
	КонецЕсли;
	

КонецПроцедуры


Процедура СоздатьЗаписьСРезультатомПроверки(Идентификатор, РезультатПроверкиСтруктура)

	ЗаписьРегистра = РегистрыСведений.РезультатыПроверкиЗадач.СоздатьМенеджерЗаписи();
	ЗаписьРегистра.Период = ТекущаяДата();
	ЗаписьРегистра.ИдентификаторРешения = Новый УникальныйИдентификатор(Идентификатор);
	ЗаписьРегистра.Пользователь = РезультатПроверкиСтруктура.Пользователь;
	ЗаписьРегистра.Задача = РезультатПроверкиСтруктура.Задача;
	ЗаписьРегистра.КоличествоБаллов = РезультатПроверкиСтруктура.result;
	ЗаписьРегистра.СтатусВыполнения = ВычислитьСтатусВыполнения(РезультатПроверкиСтруктура.Задача, РезультатПроверкиСтруктура.result);
	ЗаписьРегистра.Записать(Истина);
	
КонецПроцедуры

Функция ВычислитьСтатусВыполнения(Задача, КоличествоБаллов)

	Если Задача.ПроходнойБаллДляВыполнения <= КоличествоБаллов Тогда
		
		Возврат Перечисления.Результат.Зачтено;
		
	Иначе
		
		Возврат Перечисления.Результат.НеЗачтено;
	
	КонецЕсли;	

КонецФункции // ВычислитьСтатусВыполнения()

