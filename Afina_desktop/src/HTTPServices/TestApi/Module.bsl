
Функция test1post(Запрос)
	Ответ = Новый HTTPСервисОтвет(200); 
	
	Идентификатор = Новый УникальныйИдентификатор;
	Запись = РегистрыСведений.ОчередьЗадач.СоздатьМенеджерЗаписи();
	Запись.Идентификатор = Идентификатор;
	Запись.Период = ТекущаяДата();
	Запись.Статус = Перечисления.СтатусыВыполненияЗадач.КОбработке;
	Запись.Задача = Справочники.Задачи.НайтиПоКоду("000000001");
	Запись.Пользователь = Справочники.Пользователи.НайтиПоНаименованию("Тестовый");
	Запись.Записать();
	
	Результат = Новый Структура();
	Результат.Вставить("id", XMLСтрока(Идентификатор));
	Результат.Вставить("status", "ok");
	
	ЗаписьТело = Новый ЗаписьJSON;
	ЗаписьТело.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьТело, Результат);
	
	Ответ.УстановитьТелоИзСтроки(ЗаписьТело.Закрыть());
	
	Возврат Ответ;
КонецФункции


Функция test1get(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОчередьЗадач.Период КАК Период,
		|	ОчередьЗадач.Идентификатор КАК Идентификатор,
		|	ОчередьЗадач.Статус КАК Статус,
		|	ОчередьЗадач.РезультатПроверки КАК РезультатПроверки,
		|	ОчередьЗадач.Пользователь КАК Пользователь,
		|	ОчередьЗадач.Задача КАК Задача
		|ИЗ
		|	РегистрСведений.ОчередьЗадач КАК ОчередьЗадач";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Результат = Новый Структура();
	
	Результат.Вставить("status", "ok");
	Результат.Вставить("data", Новый Массив);
	
	Пока Выборка.Следующий() Цикл
		Задача = Новый Структура;
		Задача.Вставить("date", XMLСтрока(Выборка.Период));
		Задача.Вставить("id", XMLСтрока(Выборка.Идентификатор));
		Задача.Вставить("status", XMLСтрока(Выборка.Статус));
		Задача.Вставить("user", XMLСтрока(Выборка.Пользователь));
		Задача.Вставить("task", XMLСтрока(Выборка.Задача));
		Задача.Вставить("result", Выборка.Результат);
		Результат.data.Добавить(Задача);
	КонецЦикла;
	
	ЗаписьТело = Новый ЗаписьJSON;
	ЗаписьТело.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьТело, Результат);
	
	Ответ.УстановитьТелоИзСтроки(ЗаписьТело.Закрыть());
	
	Возврат Ответ;
КонецФункции


Функция taskQueueget(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ОчередьЗадач.Период КАК Период,
		|	ОчередьЗадач.Идентификатор КАК Идентификатор,
		|	ОчередьЗадач.Статус КАК Статус,
		|	ОчередьЗадач.РезультатПроверки КАК Результат,
		|	ОчередьЗадач.Пользователь КАК Пользователь,
		|	ОчередьЗадач.Задача КАК Задача,
		|	ОчередьЗадач.Задача.Тесты.(
		|		Тест.Наименование КАК Наименование,
		|		Тест.Сценарий КАК Сценарий,
		|		Тест КАК Ссылка
		|	) КАК Тесты
		|ИЗ
		|	РегистрСведений.ОчередьЗадач КАК ОчередьЗадач
		|ГДЕ
		|	ОчередьЗадач.Статус = ЗНАЧЕНИЕ(перечисление.СтатусыВыполненияЗадач.КОбработке)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Результат = Новый Структура();
	
	
	
	Если Выборка.Следующий() Тогда 
		Результат.Вставить("date", XMLСтрока(Выборка.Период));
		Результат.Вставить("id", XMLСтрока(Выборка.Идентификатор));
		Результат.Вставить("user", XMLСтрока(Выборка.Пользователь));
		Результат.Вставить("task", XMLСтрока(Выборка.Задача));
		Результат.Вставить("result", Выборка.Результат);
		Результат.Вставить("status", "ok");
		
		Результат.Вставить("tests", Новый Массив); 
		
		ВыборкаТестов = Выборка.Тесты.Выбрать();
		
		Пока ВыборкаТестов.Следующий() Цикл
		
			Тест = Новый Структура;
			Тест.Вставить("name", ВыборкаТестов.Наименование); 
			
			
			Тест.Вставить("scenario", ОбменДаннымиСервер.УстановитьНаименованиеИдФичи(ВыборкаТестов.Сценарий, ВыборкаТестов.Ссылка.УникальныйИдентификатор()));
			
			Результат.tests.Добавить(Тест);
			
		КонецЦикла;
		
		Запись = РегистрыСведений.ОчередьЗадач.СоздатьМенеджерЗаписи();
		Запись.Идентификатор = Выборка.Идентификатор;
		Запись.Период = Выборка.Период;
		Запись.Прочитать();
		Запись.Статус = Перечисления.СтатусыВыполненияЗадач.ВыполняетсяТест;
		Запись.Записать(Истина);
		
	Иначе
		Результат.Вставить("status", "empty");
	КонецЕсли;
	
	ЗаписьТело = Новый ЗаписьJSON;
	ЗаписьТело.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьТело, Результат);
	
	Ответ.УстановитьТелоИзСтроки(ЗаписьТело.Закрыть());
	
	Возврат Ответ;

КонецФункции


Функция taskQueuepost(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	
	Чтение = Новый ЧтениеJSON;
	Чтение.УстановитьСтроку(Запрос.ПолучитьТелоКакСтроку());
	Структура = ПрочитатьJSON(Чтение);
	
	ЗапросЗадачи = Новый Запрос;
	ЗапросЗадачи.Текст = 
		"ВЫБРАТЬ
		|	ОчередьЗадач.Период КАК Период,
		|	ОчередьЗадач.Идентификатор КАК Идентификатор
		|ИЗ
		|	РегистрСведений.ОчередьЗадач КАК ОчередьЗадач
		|ГДЕ
		|	ОчередьЗадач.Идентификатор = &Идентификатор";
	
	ЗапросЗадачи.УстановитьПараметр("Идентификатор", Новый УникальныйИдентификатор(Структура.id));
	
	РезультатЗапроса = ЗапросЗадачи.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Запись = РегистрыСведений.ОчередьЗадач.СоздатьМенеджерЗаписи();
		Запись.Идентификатор = Выборка.Идентификатор;
		Запись.Период = Выборка.Период;
		Запись.Прочитать();
		Запись.Статус = Перечисления.СтатусыВыполненияЗадач.Выполнено;
		Запись.РезультатПроверки = Структура.result;
		Запись.Записать(Истина);
		
		ПараметрыЗадания = Новый Массив;
		ПараметрыЗадания.Добавить(Выборка.Идентификатор);
		
		ФоновыеЗадания.Выполнить("ОбработкаРезультатовТестированияСервер.РасчтатьРезультатВыполнения",ПараметрыЗадания,, Строка(Новый УникальныйИдентификатор))
		
	КонецЦикла;
	
	Возврат Ответ;
КонецФункции


Функция solutionpostSolution(Запрос)
	Ответ = Новый HTTPСервисОтвет(200); 
	
	Граница = "";
	Для каждого Заголовок Из Запрос.Заголовки Цикл
	 Если Заголовок.Ключ="Content-Type" Тогда
	    ЗначениеЗаголовка=Заголовок.Значение;
	    Поз=СтрНайти(ЗначениеЗаголовка, "boundary=");
	    Если Поз>0 Тогда
	        Граница = Сред(ЗначениеЗаголовка, Поз+СтрДлина("boundary="));
	    КонецЕсли;
	  КонецЕсли; 
	КонецЦикла;
	
		
	Если НЕ ПустаяСтрока(Граница) Тогда
		ТелоПоток = Запрос.ПолучитьТелоКакПоток();
	    РазмерПотока = ТелоПоток.Размер();
	    БуферДанных = Новый БуферДвоичныхДанных(РазмерПотока);
	    ТелоПоток.Прочитать(БуферДанных, 0, РазмерПотока);
	    ТелоПоток = Неопределено;
		
		БуферРазделитель = Новый БуферДвоичныхДанных(2);
		БуферРазделитель.Установить(0,13);
		БуферРазделитель.Установить(1,10);
		
		БуферДанных=БуферДанных.Разделить(БуферРазделитель.Соединить(ПолучитьБуферДвоичныхДанныхИзСтроки("--"+Граница+"--")))[0];
		
		МассивЭлементовФормы=БуферДанных.Разделить(БуферРазделитель.Соединить(ПолучитьБуферДвоичныхДанныхИзСтроки("--"+Граница)));
		БуферДанных = Неопределено; //чистим память
		
    КонецЕсли;
	//https://infostart.ru/1c/articles/870107/  	
	Возврат Ответ;
КонецФункции


Функция solutiongetSolution(Запрос)
	Ответ = Новый HTTPСервисОтвет(200); 
	
	Данные = ОбменДаннымиСервер.ПолучитьСтруктуруИзJSON(Запрос.ПолучитьТелоКакСтроку());
	
	Если Не Данные = Неопределено Тогда
	
		HTTPСообщение = СоздатьСообщение(Данные.id);

		Ответ.УстановитьТелоИзДвоичныхДанных(HTTPСообщение);
	
	
	КонецЕсли;
	
	
 
	
	Возврат Ответ;
КонецФункции

Функция СоздатьСообщение(Идентификатор) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СоответствиеИдентификаторовРешенийИПутейКФайлам.ПутьКФайлу КАК ПутьКФайлу
		|ИЗ
		|	РегистрСведений.СоответствиеИдентификаторовРешенийИПутейКФайлам КАК СоответствиеИдентификаторовРешенийИПутейКФайлам
		|ГДЕ
		|	СоответствиеИдентификаторовРешенийИПутейКФайлам.Идентификатор = &Идентификатор";
	
	Запрос.УстановитьПараметр("Идентификатор", Новый УникальныйИдентификатор(Идентификатор));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
	
		Результат = Новый ДвоичныеДанные(ВыборкаДетальныеЗаписи.ПутьКФайлу);
	    Возврат Результат;
		
	Иначе	
		
		Возврат Неопределено;
		
	КонецЕсли;	 

	

 

КонецФункции

